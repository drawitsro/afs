var g=(t,e,r)=>new Promise((i,o)=>{var n=c=>{try{l(r.next(c))}catch(d){o(d)}},s=c=>{try{l(r.throw(c))}catch(d){o(d)}},l=c=>c.done?i(c.value):Promise.resolve(c.value).then(n,s);l((r=r.apply(t,e)).next())});(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function r(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(o){if(o.ep)return;o.ep=!0;const n=r(o);fetch(o.href,n)}})();let p=null,m=!1;const h=document.getElementById("overlay"),y=document.getElementById("overlayImage"),v=document.getElementById("closeOverlay");v.addEventListener("click",()=>{h.style.display="none",y.src=""});function I(){let t;try{console.log("Creating PixiJS application..."),t=new PIXI.Application({width:1e3,height:300,backgroundAlpha:0,autoDensity:!0,antialias:!0}),!t.canvas&&!t.view&&(console.warn("⚠ No canvas found in PixiJS app. Creating a new canvas."),t.canvas=document.createElement("canvas"),document.body.appendChild(t.canvas)),console.log("✅ PixiJS App created successfully.")}catch(e){return console.error("❌ Failed to create PixiJS Application:",e),null}return t}function E(){return g(this,null,function*(){try{console.log("Initializing application...");const t=yield fetch("/data/data.json");if(!t.ok)throw new Error(`Failed to fetch data.json (status ${t.status})`);p=yield t.json();try{console.log("Checking if WebGL is supported..."),console.log("✅ PixiJS Loaded Successfully."),console.log("PIXI Version:",PIXI.VERSION);const e=new PIXI.Renderer;if(m=!!e.view.getContext("webgl"),e.destroy(),!m)throw new Error("❌ WebGL is not supported in this browser.");console.log("✅ WebGL is supported.")}catch(e){console.error("❌ WebGL detection failed:",e);return}b()}catch(t){console.error("Error initializing editor:",t)}})}window.addEventListener("DOMContentLoaded",E);function b(){const t=document.getElementById("editor");Object.keys(p).forEach(e=>{const r=p[e];L(t,e,r)})}function L(t,e,r){console.log(`Building section for: ${e}`);const i=document.createElement("div");i.className="section";const o=document.createElement("h2");if(o.textContent=e,i.appendChild(o),!r||!r.files||!Array.isArray(r.files)){console.warn(`⚠ No images found for ${e}`);return}const n=document.createElement("div");n.className="images-container";let s=I();if(!s){console.error("❌ Skipping rendering due to PixiJS app failure.");return}n.appendChild(s.renderer.view),i.appendChild(n);const l=new PIXI.Container;s.stage.addChild(l);let c=0;r.files.forEach(d=>{const u=`data/${e}/${d}`;console.log(`Loading image: ${u}`);let f;try{if(f=PIXI.Texture.from(u),!f)throw new Error(`Failed to load texture for ${u}`)}catch(w){console.error(`❌ Error loading image ${u}:`,w);return}const a=new PIXI.Sprite(f);a.width=200,a.height=200,a.x=c,c+=a.width+5,a.interactive=!0,a.cursor="pointer",a.on("pointerdown",()=>{y.src=u,h.style.display="flex"}),l.addChild(a)}),s.renderer.resize(c,300),t.appendChild(i)}document.getElementById("saveBtn").addEventListener("click",()=>{if(!p)return;const t=JSON.stringify(p,null,2),e=new Blob([t],{type:"application/json"}),r=URL.createObjectURL(e),i=document.createElement("a");i.href=r,i.download="data.json",i.click(),URL.revokeObjectURL(r)});
